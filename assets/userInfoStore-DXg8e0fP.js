import{c as U}from"./react-CxkCoJ2v.js";function b(a,c){let r;try{r=a()}catch{return}return{getItem:s=>{var e;const d=m=>m===null?null:JSON.parse(m,void 0),u=(e=r.getItem(s))!=null?e:null;return u instanceof Promise?u.then(d):d(u)},setItem:(s,e)=>r.setItem(s,JSON.stringify(e,void 0)),removeItem:s=>r.removeItem(s)}}const y=a=>c=>{try{const r=a(c);return r instanceof Promise?r:{then(n){return y(n)(r)},catch(n){return this}}}catch(r){return{then(n){return this},catch(n){return y(n)(r)}}}},R=(a,c)=>(r,n,s)=>{let e={storage:b(()=>localStorage),partialize:t=>t,version:0,merge:(t,v)=>({...v,...t}),...c},d=!1;const u=new Set,m=new Set;let l=e.storage;if(!l)return a((...t)=>{console.warn(`[zustand persist middleware] Unable to update item '${e.name}', the given storage is currently unavailable.`),r(...t)},n,s);const S=()=>{const t=e.partialize({...n()});return l.setItem(e.name,{state:t,version:e.version})},H=s.setState;s.setState=(t,v)=>{H(t,v),S()};const g=a((...t)=>{r(...t),S()},n,s);s.getInitialState=()=>g;let f;const I=()=>{var t,v;if(!l)return;d=!1,u.forEach(o=>{var i;return o((i=n())!=null?i:g)});const h=((v=e.onRehydrateStorage)==null?void 0:v.call(e,(t=n())!=null?t:g))||void 0;return y(l.getItem.bind(l))(e.name).then(o=>{if(o)if(typeof o.version=="number"&&o.version!==e.version){if(e.migrate){const i=e.migrate(o.state,o.version);return i instanceof Promise?i.then(p=>[!0,p]):[!0,i]}console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}else return[!1,o.state];return[!1,void 0]}).then(o=>{var i;const[p,L]=o;if(f=e.merge(L,(i=n())!=null?i:g),r(f,!0),p)return S()}).then(()=>{h==null||h(f,void 0),f=n(),d=!0,m.forEach(o=>o(f))}).catch(o=>{h==null||h(void 0,o)})};return s.persist={setOptions:t=>{e={...e,...t},t.storage&&(l=t.storage)},clearStorage:()=>{l==null||l.removeItem(e.name)},getOptions:()=>e,rehydrate:()=>I(),hasHydrated:()=>d,onHydrate:t=>(u.add(t),()=>{u.delete(t)}),onFinishHydration:t=>(m.add(t),()=>{m.delete(t)})},e.skipHydration||I(),f||g},w=R,_={id:null,isLogin:!1},J=U(w((a,c)=>({..._,setUserInfo:r=>{a({...r})},getUserInfo:()=>({...c()}),clearUserInfo:()=>{a(_)}}),{name:"user-info-storage",storage:b(()=>localStorage),partialize:a=>({id:a.id,isLogin:a.isLogin})}));export{J as u};
